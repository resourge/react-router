{"version":3,"file":"index.js","sources":["../src/lib/contexts/RouterContext.ts","../src/lib/contexts/RouteContext.ts","../src/lib/utils/getUrlPattern.ts","../src/lib/utils/matchPath.ts","../src/lib/hooks/useMatchRoute.ts","../src/lib/utils/validateRouteProps.ts","../src/lib/components/Route.tsx","../src/lib/components/BrowserRouter.tsx","../src/lib/utils/generatePath.ts","../src/lib/utils/resolveLocation.ts","../src/lib/hooks/useNormalizeUrl.ts","../src/lib/hooks/useNavigate.ts","../src/lib/hooks/useLink.ts","../src/lib/components/Link.tsx","../src/lib/components/Navigate.tsx","../src/lib/contexts/PromptNextContext.ts","../src/lib/hooks/useBeforeURLChange.ts","../src/lib/hooks/useBlocker.ts","../src/lib/hooks/usePrompt.ts","../src/lib/components/Prompt.tsx","../src/lib/components/Redirect.tsx","../src/lib/hooks/useSearchRoute.ts","../src/lib/components/SearchRoute.tsx","../src/lib/hooks/useSwitch.ts","../src/lib/components/Switch.tsx","../src/lib/hooks/useAction.ts","../src/lib/hooks/useParams.ts","../src/lib/hooks/useSearchParams.ts","../src/lib/setupPaths/Param.ts","../src/lib/setupPaths/Path.ts","../src/lib/setupPaths/SetupPaths.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React, { createContext, useContext } from 'react';\n\nimport { type ActionType } from '@resourge/react-search-params';\nimport invariant from 'tiny-invariant'\n\nexport type RouterContextType = {\n\taction: ActionType\n\turl: URL\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const RouterContext = createContext<RouterContextType>(null!);\n\n/**\n * Hook to access to current URL\n */\nexport const useRouter = () => {\n\tconst context = useContext(RouterContext);\n\n\tif ( __DEV__ ) {\n\t\tinvariant(context, 'useUrl can only be used in the context of a <RouterContext>.')\n\t}\n\n\treturn useContext(RouterContext)\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React, { createContext, useContext } from 'react'\n\nimport { type MatchResult } from '../utils/matchPath'\n\nexport type RouteContextObject<Params extends Record<string, string> = Record<string, string>> = MatchResult<Params>\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const RouteContext = createContext<RouteContextObject | null>(null)\n\n/**\n * Hook to access first parent 'Route'.\n */\nexport const useRoute = <Params extends Record<string, string> = Record<string, string>>() => {\n\treturn useContext(RouteContext) as RouteContextObject<Params>\n}\n","// To remove when URLPattern becomes native\nimport 'urlpattern-polyfill';\n\nconst cacheCompile = new Map<string, URLPattern>();\nconst cacheLimit = 10000;\n\nexport type UrlPattern = {\n\tpath: string\n\tbaseURL?: string\n\t/**\n\t * @default false\n\t */\n\texact?: boolean\n\thash?: boolean\n\thashPath?: string\n}\n\nexport const getUrlPattern = ({\n\tpath, baseURL, hash, hashPath, exact\n}: UrlPattern): URLPattern => {\n\tconst _exact = exact ?? false;\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tif (cacheCompile.has(`${path}_${String(hashPath)}_${String(exact)}`)) return cacheCompile.get(`${path}_${String(hashPath)}_${String(exact)}`)!;\n\n\tconst pathname = !hash ? `${path}${_exact ? '' : '{/*}?'}` : '*'\n\tconst _hash = hash ? `${hashPath ?? ''}${_exact ? '' : '*'}` : '*'\n\n\tconst generator = new URLPattern(\n\t\t{\n\t\t\tbaseURL,\n\t\t\thostname: '*',\n\t\t\tport: '*',\n\t\t\tprotocol: '*',\n\t\t\tpathname,\n\t\t\thash: _hash,\n\t\t\tsearch: '*'\n\t\t}\n\t)\n\n\tif (cacheCompile.size < cacheLimit) {\n\t\tcacheCompile.set(`${path}_${String(hash)}`, generator)\n\t}\n\n\treturn generator;\n}\n","import { getUrlPattern, type UrlPattern } from './getUrlPattern';\n\nexport type MatchProps = UrlPattern\n\nexport type MatchResult<Params extends Record<string, string> = Record<string, string>> = {\n\t/**\n\t * Current {@link URLPatternResult}\n\t */\n\tmatch: URLPatternResult\n\t/**\n\t * Current route params\n\t */\n\tparams: Params\n\n\t/**\n\t * Current route path (merged with previous path's)\n\t */\n\tpath: string\n\t/**\n\t * Unique id for route. (prevents routes from rendering again if nothing changed)\n\t */\n\tunique: string\n\n\t/**\n\t * Current route URL\n\t */\n\turl: URL\n\t/**\n\t * Current {@link URLPattern}\n\t */\n\turlPattern: URLPattern\n\n\t/**\n\t * If current route is hashed\n\t */\n\thash?: boolean\n\t/**\n\t * Hash path\n\t */\n\thashPath?: string\n}\n\n/**\n * Method to match href to {@link MatchProps path}\n * @param href {string}\n * @param matchProps {@link MatchProps} - props to define the route\n */\nexport const matchPath = <Params extends Record<string, string> = Record<string, string>>(\n\thref: string,\n\tmatchProps: MatchProps\n): MatchResult<Params> | null => {\n\tconst {\n\t\thash, path, hashPath \n\t} = matchProps;\n\tconst pattern = getUrlPattern(matchProps);\n\n\tconst match = pattern.exec(href);\n\n\tif ( match ) {\n\t\tconst matchUrl = hash ? match.hash : match.pathname;\n\n\t\tconst pathname = matchUrl.groups[0] \n\t\t\t? matchUrl.input.replace(`/${matchUrl.groups[0]}`, '') \n\t\t\t: matchUrl.input\n\n\t\tconst search = hash ? '' : match.search.input;\n\n\t\tconst url = new URL(\n\t\t\t`${pathname}${search ? `?${search}` : ''}`,\n\t\t\twindow.location.origin\n\t\t)\n\n\t\tconst params: Params = Object.entries(matchUrl.groups)\n\t\t.reduce<Record<string, string>>((obj, [key, value]) => {\n\t\t\tif ( key !== '0' && value ) {\n\t\t\t\tobj[key] = value;\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t}, {}) as Params\n\n\t\tconst unique = hash \n\t\t\t? href.substring(href.indexOf(match.hash.input), href.length) \n\t\t\t: href.substring(0, href.lastIndexOf(match.hash.input));\n\n\t\treturn {\n\t\t\tunique,\n\t\t\tpath,\n\t\t\turl,\n\t\t\tparams,\n\t\t\turlPattern: pattern,\n\t\t\tmatch,\n\t\t\thash,\n\t\t\thashPath\n\t\t}\n\t}\n\n\treturn null\n}\n","\nimport { useRef } from 'react';\n\nimport { useRoute } from '../contexts/RouteContext';\nimport { useRouter } from '../contexts/RouterContext';\nimport { matchPath, type MatchResult } from '../utils/matchPath';\n\nexport type MatchRouteProps = {\n\t/**\n\t * Route path(s)\n\t * @default '*'\n\t */\n\tpath: string | string[]\n\t/**\n\t * Makes it so 'URL' needs to be exactly as the path\n\t * @default false\n\t */\n\texact?: boolean\n\t/**\n\t * Turn 'route' into 'hash route'\n\t * @default false\n\t */\n\thash?: boolean\n}\n\n/**\n * Method to match `url` to `url`\n * \n * @param url {URL} - Current url.\n * @param matchRoute {MatchRouteProps}\n * @param parentRoute {MatchResult} - Current route parent.\n */\nexport const matchRoute = (\n\turl: URL,\n\t{\n\t\tpath, hash, exact\n\t}: MatchRouteProps, \n\tparentRoute: MatchResult | undefined\n): MatchResult<Record<string, string>> | null => {\n\tconst baseURL = url.origin;\n\tconst href = url.href;\n\t\n\tconst paths = (Array.isArray(path) ? path : [path]);\n\n\tconst length = paths.length;\n\tfor (let i = 0; i < length; i++) {\n\t\tconst p = paths[i];\n\t\tlet _path = paths[i];\n\n\t\tlet hashPath = hash ? p : undefined;\n\t\n\t\tif ( parentRoute ) {\n\t\t\t_path = `${parentRoute.path}${!hash ? _path.replace(parentRoute.path, '') : ''}`\n\t\t\tif ( parentRoute.hashPath ) {\n\t\t\t\thashPath = `${parentRoute.hashPath}${(hashPath ?? '').replace(parentRoute.hashPath, '')}`\n\t\t\t}\n\t\t}\n\t\n\t\tconst match = matchPath(\n\t\t\thref, \n\t\t\t{\n\t\t\t\tpath: _path,\n\t\t\t\thash,\n\t\t\t\thashPath,\n\t\t\t\tbaseURL,\n\t\t\t\texact\n\t\t\t}\n\t\t)\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Hook to match path to current `url`.\n * @returns null if it is a no match, otherwise returns {@link MatchResult}\n */\nexport const useMatchRoute = (matchProps: MatchRouteProps, matchResult?: MatchResult | null) => {\n\tconst { url } = useRouter()\n\tconst parentRoute = useRoute();\n\tconst ref = useRef<MatchResult | null | undefined>();\n\n\tconst _matchResult = matchResult ?? matchRoute(url, matchProps, parentRoute);\n\n\t// This is to make sure only routes that changed are render again\n\tif ( !ref.current || !_matchResult || ref.current.unique !== _matchResult.unique ) {\n\t\tref.current = _matchResult;\n\t}\n\n\treturn ref.current\n}\n","import invariant from 'tiny-invariant';\n\nimport { type MatchRouteProps } from '../hooks';\n\nexport const validateRouteProps = __DEV__ ? (matchProps: Partial<MatchRouteProps>) => {\n\tmatchProps.path = matchProps.path ? matchProps.path : '';\n\tinvariant(\n\t\t(\n\t\t\t(\n\t\t\t\tmatchProps.hash === true && (\n\t\t\t\t\t(\n\t\t\t\t\t\tArray.isArray(matchProps.path) &&\n\t\t\t\t\t\tmatchProps.path.find((p) => p.startsWith('#'))\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\t\t\t) || (\n\t\t\t\t\t\ttypeof matchProps.path === 'string' &&\n\t\t\t\t\t\tmatchProps.path.startsWith('#')\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) || (\n\t\t\t\tmatchProps.hash !== true && (\n\t\t\t\t\t(\n\t\t\t\t\t\tArray.isArray(matchProps.path) &&\n\t\t\t\t\t\tmatchProps.path.every((p) => !p.startsWith('#'))\n\t\t\t\t\t) || (\n\t\t\t\t\t\ttypeof matchProps.path === 'string' &&\n\t\t\t\t\t\t!matchProps.path.startsWith('#')\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t), \n\t\ttypeof matchProps.path === 'string' \n\t\t\t? `Path '${matchProps.path}' ${matchProps.hash === true ? 'doesn\\'t start' : 'start'} with # but 'Route' ${matchProps.hash === true ? 'has' : 'doesn\\'t have'} prop hash.`\n\t\t\t: `Paths '${(matchProps.path ?? []).filter((p) => p.startsWith('#')).join(', ')}' start with # but 'Route' doesn't have prop hash.`\n\t);\n} : () => {}\n","import {\n\tcloneElement,\n\ttype FC,\n\ttype ReactElement,\n\ttype ReactNode\n} from 'react'\n\nimport { RouteContext } from '../contexts/RouteContext';\nimport { type MatchRouteProps, useMatchRoute } from '../hooks/useMatchRoute';\nimport { type MatchResult } from '../utils/matchPath';\nimport { validateRouteProps } from '../utils/validateRouteProps';\n\nexport type BaseRouteProps = Omit<MatchRouteProps, 'path'> & {\n\tpath?: MatchRouteProps['path']\n}\n\nexport type RouteProps = BaseRouteProps & ({\n\tchildren: ReactNode\n\tcomponent?: ReactElement\n} | ({\n\tcomponent: ReactElement\n\tchildren?: ReactNode\n}))\n\nexport type IRouteProps = RouteProps & {\n\tcomputedMatch?: MatchResult | null\n}\n\n/**\n * Component that only renders at a certain path.\n *\n * Note: This component mainly uses `useMatchRoute` hook. And Route without `path` will be treated as normal components.\n */\nconst Route: FC<RouteProps> = ({\n\tchildren, component,\n\tcomputedMatch,\n\n\t...matchProps\n}: IRouteProps) => {\n\tvalidateRouteProps(matchProps);\n\n\tif ( \n\t\tmatchProps.path === undefined\n\t) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ component ? cloneElement(component, {}, component.props.children, children) : children }\n\t\t\t</>\n\t\t)\n\t}\n\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\tconst match = useMatchRoute(matchProps as MatchRouteProps, computedMatch)\n\n\tif ( match ) {\n\t\treturn (\n\t\t\t<RouteContext.Provider value={match}>\n\t\t\t\t{ component ? cloneElement(component, {}, component.props.children, children) : children }\n\t\t\t</RouteContext.Provider>\n\t\t)\n\t}\n\n\treturn null;\n};\n\nexport default Route;\n","import { type FC, type PropsWithChildren } from 'react';\n\nimport { useUrl } from '@resourge/react-search-params';\n\nimport { RouterContext } from '../contexts/RouterContext';\n\nimport Route, { type BaseRouteProps } from './Route';\n\nexport type BrowserRouterProps = PropsWithChildren<{\n\tbase?: string\n} & Omit<BaseRouteProps, 'path'>>\n\n/**\n * First component that creates the context for the rest of the children.\n *\n * Note: This component mainly uses `useUrl` hook from '@resourge/react-search-params'.\n */\nconst BrowserRouter: FC<BrowserRouterProps> = ({\n\tbase = '', children, ...routeProps \n}) => {\n\tconst [url, action] = useUrl();\n\n\treturn (\n\t\t<RouterContext.Provider \n\t\t\tvalue={{\n\t\t\t\turl,\n\t\t\t\taction \n\t\t\t}}\n\t\t>\n\t\t\t<Route path={base} {...routeProps}>\n\t\t\t\t{ children }\n\t\t\t</Route>\n\t\t</RouterContext.Provider>\n\t);\n};\n\nexport default BrowserRouter;\n","import invariant from 'tiny-invariant';\n\n/**\n * Converter param's of path into there respective value.\n * @param path {string}\n * @param params {T} Object containing key and values of path params\n * @returns \n */\nexport function generatePath<T extends Record<string, any>>(path: string, params: T): string {\n\treturn path\n\t.replace(/{{0,1}:(\\w+)\\?{0,1}(\\(.*\\)){0,1}}{0,1}/g, (originalKey, key: string) => {\n\t\tconst value = params[key]\n\t\tif ( __DEV__ ) {\n\t\t\tinvariant(!(!originalKey.includes('?') && value === undefined), `Value of key '${key}' for path '${path}' cannot be undefined.`)\n\t\t}\n\t\treturn value ?? ''\n\t})\n\t.replace(/\\/*\\*$/, () => params['*'] == null ? '' : params['*'].replace(/^\\/*/, '/'));\n}\n\nexport function createPathWithCurrentLocationHasHash(path: string) {\n\tconst newPath = new URL(path, window.location.origin)\n\n\tconst windowURL = new URL(window.location as any);\n\tnewPath.hash = window.location.pathname && window.location.pathname !== '/' ? windowURL.href.replace(windowURL.origin, '') : ''\n\n\treturn newPath.href;\n}\n","/* eslint-disable no-useless-escape */\n\n/**\n * Method to resolve `URL`'s\n *  Ex:\n * baseUrl: /home/dashboard\n * \n * url: \"/home\" // /home\n * url: \"home\" // /home/dashboard/home\n * url: \"about\" // /home/dashboard/about\n * url: \"./about\" // /home/dashboard/about\n * url: \"/about\" // /about\n * url: \"../contact\" // /home/contact\n * url: \"../../products\" // /products\n * url: \"../../../products\" // /products\n */\nexport function resolveLocation(url: string, _baseURL?: string): URL {\n\tconst baseURL = _baseURL ? (_baseURL.lastIndexOf('/') === _baseURL.length - 1) ? _baseURL : `${_baseURL}/` : undefined\n\tconst m = String(url)\n\t.replace(/^\\s+|\\s+$/g, '')\n\t.match(/^([^:\\/?#]+:)?(?:\\/\\/(?:([^:@\\/?#]*)(?::([^:@\\/?#]*))?@)?(([^:\\/?#]*)(?::(\\d*))?))?([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/);\n\tif (!m) {\n\t\tthrow new RangeError();\n\t}\n\tlet pathname = m[7] || '';\n\tlet search = m[8] || '';\n\tconst hash = m[9] || '';\n\tif (baseURL !== undefined) {\n\t\tconst base = resolveLocation(baseURL);\n\t\tif (pathname === '' && search === '') {\n\t\t\tsearch = base.search;\n\t\t}\n\t\t/* if (pathname.charAt(0) !== '/') {\n\t\t\tpathname = (pathname !== '' ? `${(base.pathname === '' ? '/' : '')}${base.pathname.lastIndexOf('/') !== base.pathname.length ? `${base.pathname}/` : base.pathname}${pathname}` : base.pathname);\n\t\t} */\n\t\tif (pathname.charAt(0) !== '/') {\n\t\t\tpathname = (pathname !== '' ? `${(base.pathname === '' ? '/' : '')}${base.pathname.slice(0, (base.pathname ).lastIndexOf('/') + 1)}${pathname}` : base.pathname);\n\t\t}\n\t\t// dot segments removal\n\t\tconst output: string[] = [];\n\t\tpathname.replace(/^(\\.\\.?(\\/|$))+/, '')\n\t\t.replace(/\\/(\\.(\\/|$))+/g, '/')\n\t\t.replace(/\\/\\.\\.$/, '/../')\n\t\t.replace(/\\/?[^\\/]*/g, (p) => {\n\t\t\tif (p === '/..') {\n\t\t\t\toutput.pop();\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutput.push(p);\n\t\t\t}\n\t\t\treturn p;\n\t\t});\n\t\tpathname = output.join('')\n\t\t.replace(/^\\//, pathname.charAt(0) === '/' ? '/' : '');\n\t}\n\n\treturn new URL(\n\t\tpathname + search + hash,\n\t\twindow.location.origin\n\t)\n}\n","import { useRoute } from '../contexts/RouteContext';\nimport { useRouter } from '../contexts/RouterContext';\nimport { generatePath } from '../utils/generatePath';\nimport { resolveLocation } from '../utils/resolveLocation';\n\ntype NavigateURL = Pick<Partial<URL>, 'pathname' | 'hash' | 'search'> \n\ntype NavigateParams = {\n\tparams: Record<string, any>\n}\n\ntype NavigateObject = NavigateURL | NavigateParams\n\nexport type NavigateTo = string | URL | NavigateObject | ((url: URL, routeUrl: URL) => string | URL | NavigateObject)\n\nconst normalizeUrl = (\n\tto: NavigateTo, \n\tpath: string,\n\tparams: Record<string, any>,\n\turl: URL, \n\trouteUrl: URL\n): URL => {\n\t// If to is string, resolve to with current url\n\tif ( typeof to === 'string' ) {\n\t\treturn resolveLocation(to, url.href)\n\t}\n\t// If to is URL, just navigate to URL\n\telse if ( to instanceof URL ) {\n\t\treturn to\n\t}\n\telse if ( typeof to === 'function' ) {\n\t\treturn normalizeUrl(\n\t\t\tto(url, routeUrl),\n\t\t\tpath,\n\t\t\tparams,\n\t\t\turl,\n\t\t\trouteUrl\n\t\t);\n\t}\n\telse {\n\t\tconst newUrl = new URL(url);\n\n\t\tif ( (to as NavigateParams).params ) {\n\t\t\tif ( path ) {\n\t\t\t\tconst newParams = {\n\t\t\t\t\t...params,\n\t\t\t\t\t...(to as NavigateParams).params\n\t\t\t\t}\n\t\n\t\t\t\tconst newPath = generatePath(path, newParams);\n\t\t\t\tnewUrl.pathname = newPath;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t(Object.entries(to) as Array<[keyof NavigateURL, string]>)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tnewUrl[key] = value;\n\t\t\t})\n\t\t}\n\n\t\treturn newUrl\n\t}\n}\n\n/**\n * Returns a method for making a url from `to`.\n */\nexport const useNormalizeUrl = () => {\n\tconst { url } = useRouter();\n\tconst {\n\t\turl: routeUrl,\n\t\tparams,\n\t\tpath\n\t} = useRoute();\n\n\treturn (to: NavigateTo) => {\n\t\treturn normalizeUrl(\n\t\t\tto,\n\t\t\tpath,\n\t\t\tparams,\n\t\t\turl,\n\t\t\trouteUrl\n\t\t)\n\t}\n}\n","\nimport { type ActionType } from '@resourge/react-search-params';\n\nimport { type NavigateTo, useNormalizeUrl } from './useNormalizeUrl';\n\nexport type NavigateOptions = {\n\t/**\n\t * A way to specify the action\n\t * @default false\n\t */\n\taction?: Exclude<ActionType, 'initial'>\n\t/**\n\t * Replaces path instead of push\n\t * @default false\n\t */\n\treplace?: boolean\n}\n\n/**\n * Returns a method for navigation `to`.\n */\nexport const useNavigate = () => {\n\tconst generateUrl = useNormalizeUrl();\n\n\treturn (to: NavigateTo, options: NavigateOptions = {}) => {\n\t\tconst { replace = false, action } = options;\n\n\t\tconst url = generateUrl(to);\n\n\t\tif ( window.location.href === url.href ) {\n\t\t\treturn;\n\t\t}\n\t\twindow.history[replace ? 'replaceState' : 'pushState'](action ? {\n\t\t\taction \n\t\t} : null, '', url);\n\t}\n}\n","import { type AnchorHTMLAttributes, type MouseEvent } from 'react';\n\nimport { type NavigateOptions, useNavigate } from './useNavigate'\nimport { type NavigateTo, useNormalizeUrl } from './useNormalizeUrl';\n\nexport type UseLinkProps = {\n\tto: NavigateTo\n} \n& NavigateOptions\n& Omit<AnchorHTMLAttributes<HTMLAnchorElement>, 'href'>\n\nfunction isModifiedEvent(event: MouseEvent<any>) {\n\treturn !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\n/**\n * Hook that returns 'href' and onClick method to navigate to link\n */\nexport const useLink = ({\n\tto, replace, ...aProps \n}: UseLinkProps) => {\n\tconst navigate = useNavigate();\n\tconst normalizeUrl = useNormalizeUrl();\n\n\tconst url = normalizeUrl(to);\n\n\tconst onClick = (event: MouseEvent<HTMLAnchorElement>) => {\n\t\ttry {\n\t\t\tif (aProps.onClick) aProps.onClick(event);\n\t\t}\n\t\tcatch (ex) {\n\t\t\tevent.preventDefault();\n\t\t\tthrow ex;\n\t\t}\n\n\t\tif (\n\t\t\t!event.defaultPrevented && \n\t\t\tevent.button === 0 && (\n\t\t\t\t!aProps.target || aProps.target === '_self'\n\t\t\t) &&\n\t\t\t!isModifiedEvent(event)\n\t\t) {\n\t\t\tevent.preventDefault();\n\t\t\tnavigate(url, {\n\t\t\t\treplace \n\t\t\t});\n\t\t}\n\t}\n\n\treturn [url.href, onClick] as const\n}\n","import React, { type ForwardedRef, forwardRef } from 'react';\n\nimport { useRouter } from '../contexts/RouterContext';\nimport { useLink, type UseLinkProps } from '../hooks/useLink';\nimport { type MatchRouteProps } from '../hooks/useMatchRoute';\n\nexport type LinkProps = UseLinkProps & {\n\tmatchClassName?: string\n} & Omit<MatchRouteProps, 'path'>\n\n/**\n * Component extends element `a` and navigates to `to`.\n * \n * Note: This component mainly uses `useLink` hook to navigate to `to` and `useMatchRoute` to match route.\n */\nconst Link = forwardRef((\n\tprops: LinkProps,\n\tref: ForwardedRef<HTMLAnchorElement>\n) => {\n\tconst { \n\t\tto, \n\t\treplace,\n\n\t\texact,\n\t\thash,\n\n\t\tclassName,\n\t\tmatchClassName,\n\n\t\t...aProps \n\t} = props\n\tconst { url } = useRouter();\n\tconst [href, onClick] = useLink(props)\n\tconst match = href === url.href;\n\n\tconst _class = [className, match ? matchClassName : ''].filter(cn => cn);\n\n\tconst _className = _class && _class.length ? _class.join(' ') : undefined;\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/anchor-has-content\n\t\t<a {...aProps} ref={ref} className={_className} href={href} onClick={onClick} />\n\t);\n});\n\nLink.displayName = 'Link'\n\nexport default Link;\n","import { type FC, useEffect } from 'react';\n\nimport { type NavigateOptions, useNavigate } from '../hooks/useNavigate';\nimport { type NavigateTo } from '../hooks/useNormalizeUrl';\n\nexport type NavigateProps = {\n\tto: NavigateTo\n} & NavigateOptions\n/**\n * Navigates to `to`.\n *\n * Note: This component mainly uses `useNavigate` hook to navigate to `to`.\n */\nconst Navigate: FC<NavigateProps> = ({ to, ...navigateOptions }: NavigateProps) => {\n\tconst navigate = useNavigate()\n\n\tuseEffect(() => {\n\t\tnavigate(to, navigateOptions)\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\treturn null;\n};\n\nexport default Navigate;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport React, { createContext, useContext } from 'react';\n\nimport invariant from 'tiny-invariant'\n\nimport { type BlockerResult } from '../hooks/useBlocker';\n\nexport const PromptNextContext = createContext<BlockerResult | null>(null);\n\n/**\n * To use inside Prompt components.\n * Contains the `next` method to navigate after \"Prompt\" is finished.\n */\nexport const usePromptNext = () => {\n\tconst context = useContext(PromptNextContext);\n\n\tif ( __DEV__ ) {\n\t\tinvariant(context, 'usePromptNext can only be used in the context of a <PromptContext/Prompt> component.')\n\t}\n\n\treturn context as BlockerResult;\n}\n","import { useEffect, useRef } from 'react';\n\nimport { type BeforeUrlChangeEvent } from '@resourge/react-search-params';\n\n/**\n * Fires before the route changes.\n * @param beforeURLChange\n *  If result:\n * \t\t`true` routing will occur normally\n *  \t`false` will prevent route from changing\n */\nexport const useBeforeURLChange = (beforeURLChange: (event: BeforeUrlChangeEvent) => boolean) => {\n\tconst beforeURLChangeRef = useRef(beforeURLChange);\n\n\tbeforeURLChangeRef.current = beforeURLChange;\n\n\tuseEffect(() => {\n\t\tconst _beforeURLChange = (event: BeforeUrlChangeEvent) => beforeURLChangeRef.current(event)\n\t\t\n\t\twindow.addEventListener('beforeURLChange', _beforeURLChange, false)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('beforeURLChange', _beforeURLChange, false)\n\t\t}\n\t}, [])\n}\n","import { useState } from 'react';\n\nimport { type EVENTS } from '@resourge/react-search-params';\n\nimport { useRoute } from '../contexts/RouteContext';\n\nimport { useBeforeURLChange } from './useBeforeURLChange';\n\nexport type Blocker = (routeUrl: URL, url: URL, action: typeof EVENTS[keyof typeof EVENTS]) => boolean\n\nexport type BlockerResult = {\n\tcontinueNavigation: () => void\n\tfinishBlocking: () => void\n\tisBlocking: boolean\n}\n\n/**\n * Fires before the route change, and serves to block or not the current route.\n * @param blocker {Blocker}\n * @returns blockerResult {BlockerResult}\n */\nexport const useBlocker = (\n\tblocker: Blocker\n): BlockerResult => {\n\tconst { url } = useRoute();\n\tconst [{ isBlocking, continueNavigation }, setBlocker] = useState<{ continueNavigation: () => void, isBlocking: boolean }>({\n\t\tisBlocking: false,\n\t\tcontinueNavigation: () => {}\n\t})\n\n\tconst finishBlocking = () => {\n\t\tsetBlocker({\n\t\t\tisBlocking: false,\n\t\t\tcontinueNavigation: () => {}\n\t\t})\n\t}\n\n\tuseBeforeURLChange((event) => {\n\t\tconst continueNavigation = () => {\n\t\t\tevent.next();\n\t\t\tfinishBlocking();\n\t\t}\n\t\tconst isBlocking = blocker(url, event.url, event.action);\n\n\t\tif ( isBlocking ) {\n\t\t\tsetBlocker({\n\t\t\t\tisBlocking: true,\n\t\t\t\tcontinueNavigation\n\t\t\t})\n\t\t}\n\t\treturn !isBlocking\n\t})\n\n\treturn {\n\t\tisBlocking, \n\t\tcontinueNavigation, \n\t\tfinishBlocking\n\t};\n}\n","import { type EVENTS } from '@resourge/react-search-params'\n\nimport { useBlocker, type Blocker, type BlockerResult } from './useBlocker'\n\nexport type UsePromptProps = {\n\t/**\n\t * When true blocks url change\n\t */\n\twhen: boolean | Blocker\n\tmessage?: string | ((routeUrl: URL, url: URL, action: typeof EVENTS[keyof typeof EVENTS]) => string)\n}\n\n/**\n * @param when When `true` it will prompt the user \n * \tbefore navigating away from a screen. \n *  (accepts method that return's boolean).\n * @param message When set, will prompt the user with native `confirm` and message.\n * \tWhen `undefined` will wait `[1]` method to be called\n * @returns promptResult {BlockerResult}\n */\nexport const usePrompt = ({ when, message }: UsePromptProps): BlockerResult => {\n\tconst _blocker = typeof when === 'boolean' ? () => when : (when)\n\n\treturn useBlocker((routeUrl, url, action) => {\n\t\tconst isBlocking = _blocker(routeUrl, url, action);\n\n\t\tif ( isBlocking && message ) {\n\t\t\tconst _message = typeof message === 'string' ? message : message(routeUrl, url, action)\n\n\t\t\treturn !window.confirm(_message)\n\t\t}\n\n\t\treturn isBlocking;\n\t})\n}\n","import { type FC, type ReactNode } from 'react';\n\nimport { PromptNextContext } from '../contexts/PromptNextContext';\nimport { usePrompt, type UsePromptProps } from '../hooks/usePrompt';\n\nexport type PromptProps = {\n\tchildren?: ReactNode\n} & UsePromptProps\n\n/**\n * Component for prompting the user before navigating.\n * \n * * Note: This component mainly uses `usePrompt` hook.\n */\nconst Prompt: FC<PromptProps> = ({ children, ...promptProps }) => {\n\tconst promptResult = usePrompt(promptProps)\n\n\tif ( !promptResult.isBlocking ) {\n\t\treturn (<></>);\n\t}\n\n\treturn (\n\t\t<PromptNextContext.Provider value={promptResult}>\n\t\t\t{ children }\n\t\t</PromptNextContext.Provider>\n\t);\n};\n\nexport default Prompt;\n","import { type FC } from 'react';\n\nimport Navigate, { type NavigateProps } from './Navigate';\nimport Route, { type RouteProps } from './Route';\n\nexport type RedirectProps = {\n\tfrom: RouteProps['path']\n} & NavigateProps & Omit<RouteProps, 'path'>\n\n/**\n * Navigates from `path` to `to`.\n *\n * Note: This component uses the component Route and Navigate.\n */\nconst Redirect: FC<RedirectProps> = ({ \n\tfrom,\n\tto, replace,\n\t...routeProps\n}: RedirectProps) => (\n\t<Route path={from} {...routeProps}>\n\t\t<Navigate \n\t\t\treplace={replace}\n\t\t\tto={to}\n\t\t/>\n\t</Route>\n);\n\nexport default Redirect;\n","import { useRef } from 'react'\n\nimport { useRoute } from '../contexts/RouteContext'\nimport { useRouter } from '../contexts/RouterContext'\nimport { type MatchResult } from '../utils/matchPath'\n\nimport { type MatchRouteProps, matchRoute } from './useMatchRoute'\n\nexport type UseSearchRouteProps = {\n\t/**\n\t * Route search\n\t */\n\tsearch: string | string[]\n} & Omit<MatchRouteProps, 'path'>\n\n/**\n * Method to match `search(s)` to `url`\n * \n * @param url {URL} - Current url.\n * @param matchRoute {UseSearchRouteProps}\n * @param parentRoute {MatchResult} - Current route parent.\n */\nexport const matchSearchRoute = (\n\turl: URL,\n\t{\n\t\tsearch, hash, exact\n\t}: UseSearchRouteProps, \n\tparentRoute: MatchResult | undefined\n) => {\n\tconst _search = Array.isArray(search) ? search : [search];\n\n\tconst hashUrl = new URL(url.hash.replace('#', ''), url.origin)\n\n\tif ( _search.every((search) => hashUrl.searchParams.has(search)) ) {\n\t\tconst matchProps: MatchRouteProps = {\n\t\t\tpath: '*',\n\t\t\texact,\n\t\t\thash\n\t\t}\n\n\t\treturn matchRoute(url, matchProps, parentRoute);\n\t}\n\n\treturn null;\n}\n\n/**\n * Hook to match search(s) to current `url`.\n * @returns null if it is a no match, otherwise returns {@link MatchResult}\n */\nexport const useSearchRoute = (matchSearchProps: UseSearchRouteProps, computedMatch?: MatchResult | null) => {\n\tconst { url } = useRouter()\n\tconst parentRoute = useRoute();\n\tconst ref = useRef<MatchResult | null | undefined>();\n\t\n\tconst _matchResult = computedMatch ?? matchSearchRoute(url, matchSearchProps, parentRoute);\n\n\t// This is to make sure only routes that changed are render again\n\tif ( \n\t\t!ref.current || \n\t\t\t!_matchResult || \n\t\t\t(ref.current.unique !== _matchResult.unique) \n\t) {\n\t\tref.current = _matchResult;\n\t}\n\n\treturn ref.current;\n}\n","import {\n\tcloneElement,\n\ttype FC,\n\ttype ReactElement,\n\ttype ReactNode\n} from 'react'\n\nimport { RouteContext } from '../contexts/RouteContext';\nimport { type UseSearchRouteProps, useSearchRoute } from '../hooks/useSearchRoute';\nimport { type MatchResult } from '../utils/matchPath';\n\nexport type BaseSearchRouteProps = UseSearchRouteProps\n\nexport type SearchRouteProps = BaseSearchRouteProps & ({\n\tchildren: ReactNode\n\tcomponent?: ReactElement\n})\n\nexport type ISearchRouteProps = SearchRouteProps & {\n\tcomputedMatch?: MatchResult | null\n}\n\n/**\n * Component that only renders at a certain `search`.\n *\n * Note: This component mainly uses `useSearchRoute` hook.\n */\nconst SearchRoute: FC<SearchRouteProps> = ({\n\tchildren, component,\n\tcomputedMatch,\n\n\t...matchProps\n}: ISearchRouteProps) => {\n\tconst match = useSearchRoute(matchProps, computedMatch)\n\n\tif ( match ) {\n\t\treturn (\n\t\t\t<RouteContext.Provider value={match}>\n\t\t\t\t{ component ? cloneElement(component, {}, children) : children }\n\t\t\t</RouteContext.Provider>\n\t\t)\n\t}\n\n\treturn null;\n};\n\nexport default SearchRoute;\n","import { Children, type ReactElement, cloneElement } from 'react';\n\nimport invariant from 'tiny-invariant'\n\nimport { type NavigateProps } from '../components/Navigate';\nimport { type RedirectProps } from '../components/Redirect';\nimport { type BaseRouteProps } from '../components/Route';\nimport { type BaseSearchRouteProps } from '../components/SearchRoute';\nimport { type RouteContextObject, useRoute } from '../contexts/RouteContext';\nimport { useRouter } from '../contexts/RouterContext';\nimport { validateRouteProps } from '../utils/validateRouteProps';\n\nimport { matchRoute } from './useMatchRoute';\nimport { matchSearchRoute } from './useSearchRoute';\n\ntype Props = BaseRouteProps | BaseSearchRouteProps | RedirectProps | NavigateProps;\n\nconst isNavigateOrRedirect = (props: RedirectProps | NavigateProps) => {\n\treturn props.to !== undefined\n}\n\nconst isSearchRoute = (props: BaseSearchRouteProps) => {\n\treturn props.search !== undefined\n}\n\nconst isRoute = (\n\tprops: Props\n) => {\n\treturn (\n\t\t!isNavigateOrRedirect(props as RedirectProps) &&\n\t\t!isSearchRoute(props as BaseSearchRouteProps)\n\t)\n}\n\nconst getMatchFromProps = (\n\turl: URL, \n\tparentRoute: RouteContextObject<Record<string, string>>, \n\tprops: Props\n) => {\n\tif ( __DEV__ ) {\n\t\tinvariant(\n\t\t\t(props as BaseSearchRouteProps).search ||\n\t\t\t(props as NavigateProps).to ||\n\t\t\t!(props as BaseRouteProps).path ||\n\t\t\t(props as BaseRouteProps).path,\n\t\t\t'`useSwitch` can only accept component\\'s with `path`, `search`, `from` or `to` attributes'\n\t\t);\n\t}\n\n\tconst searchBaseProps = (props as BaseSearchRouteProps)\n\tif ( isSearchRoute(searchBaseProps) ) {\n\t\treturn matchSearchRoute(url, {\n\t\t\t...searchBaseProps\n\t\t}, parentRoute)\n\t}\n\t\n\tconst path = (props as BaseRouteProps).path ?? (props as RedirectProps).from;\n\tif ( path ) {\n\t\tvalidateRouteProps({\n\t\t\t...(props as BaseRouteProps),\n\t\t\tpath\n\t\t})\n\t\t\n\t\treturn matchRoute(url, {\n\t\t\t...props,\n\t\t\tpath\n\t\t}, parentRoute)\n\t}\n\n\treturn matchRoute(url, {\n\t\t...searchBaseProps,\n\t\tpath: '*'\n\t}, parentRoute)\n}\n\n/**\n * Returns the first children component with props `path`, `search`, `to/from` that matches the current location or without previous props.\n */\nexport const useSwitch = (children: Array<ReactElement<Props>> | ReactElement<Props>): ReactElement<BaseRouteProps> | null => {\t\n\tconst { url } = useRouter()\n\tconst parentRoute = useRoute();\n\n\tconst childArray = Children.toArray(children) as Array<ReactElement<Props>>;\n\n\tfor (let i = 0; i < childArray.length; i++) {\n\t\tconst child = childArray[i];\n\n\t\tif ( isRoute(child.props) && (child.props as BaseRouteProps).path === undefined ) {\n\t\t\treturn child as unknown as ReactElement<BaseRouteProps>;\n\t\t}\n\t\n\t\tconst match = getMatchFromProps(url, parentRoute, child.props);\n\n\t\tif ( match ) {\n\t\t\treturn cloneElement(child, {\n\t\t\t\t// @ts-expect-error computedMatch does exist but I want it so be exclusive to switch\n\t\t\t\tcomputedMatch: match \n\t\t\t}) as unknown as ReactElement<BaseRouteProps>;\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { type FC, type ReactElement } from 'react';\n\nimport { useSwitch } from '../hooks/useSwitch';\n\nimport { type BaseRouteProps } from './Route';\n\nexport type SwitchProps = {\n\tchildren: Array<ReactElement<BaseRouteProps>> | ReactElement<BaseRouteProps>\n}\n\n/**\n * Component that makes sure the first matching path renders.\n *\n * Note: This component mainly uses `useSwitch` hook.\n */\nconst Switch: FC<SwitchProps> = ({ children }: SwitchProps) => {\n\treturn useSwitch(children);\n};\n\nexport default Switch;\n","import { type ActionType } from '@resourge/react-search-params'\n\nimport { useRouter } from '../contexts'\n\n/**\n * Hook to access action that lead to the current `URL`.\n */\nexport const useAction = (): ActionType => {\n\treturn useRouter().action\n}\n","import { useRoute } from '../contexts/RouteContext';\nimport { type StringifyObjectParams } from '../types/StringifyObjectParams';\n\nexport type TransformParams<Params extends Record<string, string> = Record<string, string>> = (params: StringifyObjectParams<Params>) => Params\n\n/**\n * Returns the current route params\n *\n * @param transformsParams Method to transform the params\n */\nexport const useParams = <Params extends Record<string, string> = Record<string, string>>(\n\ttransformsParams: TransformParams<Params> = (params) => params as Params\n): Params => {\n\tconst route = useRoute<Params>();\n\n\tconst params: StringifyObjectParams<Params> = {\n\t\t...route.params\n\t};\n\n\treturn transformsParams(params)\n}\n","import { useMemo } from 'react';\n\nimport { parseParams, parseSearchParams, createNewUrlWithSearch } from '@resourge/react-search-params';\n\nimport { useRoute } from '../contexts/RouteContext';\nimport { useRouter } from '../contexts/RouterContext';\n\nimport { useNavigate } from './useNavigate';\n\n/**\n * Returns the current search parameters and a method to change\n * @param defaultParams {T}\n */\nexport const useSearchParams = <T extends Record<string, any>>(defaultParams?: T) => {\n\tconst {\n\t\thash,\n\t\turl: routeUrl\n\t} = useRoute();\n\tconst { url } = useRouter();\n\tconst navigate = useNavigate()\n\n\tconst search = routeUrl.search;\n\tconst _searchParams = routeUrl.searchParams;\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tconst searchParams = useMemo(() => parseSearchParams<T>(_searchParams, defaultParams), [search]);\n\n\tconst setParams = (newParams: Partial<T>) => {\n\t\tconst newSearch = parseParams(newParams);\n\n\t\tif (search !== newSearch) {\n\t\t\tconst newURL = createNewUrlWithSearch(url, newSearch, hash);\n\n\t\t\tnavigate(newURL)\n\t\t}\n\t};\n\n\treturn [searchParams, setParams] as const;\n}\n","import invariant from 'tiny-invariant'\n\nexport type ParamsConfigOptional<ParamResult = any, BeforePath = ParamResult> = { \n\t/**\n\t * Makes param optional\n\t */\n\toptional: true\n\t/**\n\t * Transforms param before path creation (get).\n\t */\n\tbeforePath?: (value: BeforePath) => string | BeforePath\n\t/**\n\t * Transform's param on useParam.\n\t */\n\ttransform?: (value?: string) => ParamResult | undefined \n}\n\nexport type ParamsConfigNotOptional<ParamResult = any, BeforePath = ParamResult> = { \n\t/**\n\t * Transforms param before path creation (get).\n\t */\n\tbeforePath?: (value: BeforePath) => string | BeforePath\n\t/**\n\t * Makes param optional\n\t */\n\toptional?: false | undefined \n\t/**\n\t * Transform's param on useParam.\n\t */\n\ttransform?: (value: string) => ParamResult \n}\n\nexport type ParamsConfig<ParamResult = any, BeforePath = ParamResult> = ParamsConfigNotOptional<ParamResult, BeforePath> | ParamsConfigOptional<ParamResult, BeforePath>\n\nexport class ParamPath<Key = any, Params = any, UseParams = Params, IsOptional = false> {\n\tpublic key: Key = '' as Key\n\tpublic param: string = ''\n\tpublic config?: IsOptional extends true \n\t\t? ParamsConfigOptional<UseParams, Params> \n\t\t: ParamsConfigNotOptional<UseParams, Params>\n}\n\nexport const Param = < \n\tK extends string = string,\n\tParams extends any | undefined = string,\n\tUseParams = Params,\n\tIsOptional extends boolean = false\n>(\n\tparam: K, \n\tconfig?: ParamsConfig<UseParams extends Params ? Params : UseParams, Params> & {\n\t\toptional?: IsOptional\n\t}\n): ParamPath<K, Params, UseParams, IsOptional extends true ? false : true> => {\n\tif ( __DEV__ ) { \n\t\tinvariant(\n\t\t\t!param.includes(':'),\n\t\t\t'Don\\'t use \\':\\' inside `param`.'\n\t\t);\n\t}\n\n\tconst instance = new ParamPath<K, Params, UseParams, IsOptional extends true ? false : true>();\n\n\tinstance.param = `:${param}`;\n\tinstance.key = param;\n\tif ( config?.optional ) {\n\t\tinstance.param = `{${instance.param}}?`;\n\t}\n\tinstance.config = config as any\n\n\treturn instance;\n}\n","/* eslint-disable @typescript-eslint/prefer-reduce-type-parameter */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\n/* eslint-disable @typescript-eslint/ban-types */\nimport invariant from 'tiny-invariant';\n\nimport { useParams } from '../hooks/useParams';\nimport { type StringifyObjectParams } from '../types/StringifyObjectParams';\nimport { type CleanObjects, type IsAllOptional } from '../types/types';\nimport { generatePath } from '../utils/generatePath';\n\nimport {\n\tParam,\n\tParamPath,\n\ttype ParamsConfig,\n\ttype ParamsConfigOptional\n} from './Param'\n\nexport function createPathWithCurrentLocationHasHash(path: string) {\n\tconst newPath = new URL(path, window.location.origin)\n\n\tconst windowURL = new URL(window.location as any);\n\tnewPath.hash = window.location.pathname && window.location.pathname !== '/' ? windowURL.href.replace(windowURL.origin, '') : ''\n\n\treturn newPath.href;\n}\n\nexport type PathType<\n\tRoutes extends Record<string, Path<any, any, any>>, \n\tParams extends Record<string, any> | undefined = undefined, \n\tUseParams extends Record<string, any> | undefined = undefined\n> = {\n\t/**\n\t * Method to obtain the true path.\n\t * Calling it with `params` will replace the params with the params value on the path.\n\t */\n\tget: Params extends undefined \n\t\t? (() => string)\n\t\t: IsAllOptional<Params> extends true \n\t\t\t? (\n\t\t\t\t((params?: Params) => string)\n\t\t\t) : (params: Params) => string\n\t/**\n\t * Generated string from chain functions. Includes path with `params`.\n\t */\n\tpath: string\n} & InjectParamsIntoPathType<Routes, Params, UseParams> & (\n\tIsAllOptional<UseParams> extends false ? {\n\t\t/**\n\t\t * Hook to receive the params related to the route.\n\t\t * Here all the transform method will transform the params to the desired params. \n\t\t */\n\t\tuseParams: () => UseParams\n\t} : (\n\t\tundefined extends UseParams ? {} : {\n\t\t/**\n\t\t * Hook to receive the params related to the route.\n\t\t * Here all the transform method will transform the params to the desired params. \n\t\t */\n\t\t\tuseParams: () => UseParams\n\t\t}\n\t)\n)\n\nexport type InjectParamsIntoPathType<\n\tPaths extends Record<string, Path<any, any, any>>, \n\tParams extends Record<string, any> | undefined = undefined, \n\tUseParams extends Record<string, any> | undefined = undefined\n> = {\n\t[K in keyof Paths]: PathType<\n\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\tPaths[K]['_routes'], \n\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\tPaths[K]['_params'] & Params,\n\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\tPaths[K]['_useParams'] & UseParams\n\t>\n}\n\nexport type InjectParamsIntoPath<\n\tParams extends Record<string, any>, \n\tUseParams extends Record<string, any>, \n\tPaths extends Record<string, Path<any, any, any>>\n> = string extends keyof Params ? Paths : {\n\t[K in keyof Paths]: Path<\n\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\tPaths[K]['_params'] & Params, \n\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\tPaths[K]['_useParams'] & UseParams, \n\t\tInjectParamsIntoPath<\n\t\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\t\tPaths[K]['_params'] & Params, \n\t\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\t\tPaths[K]['_useParams'] & UseParams, \n\t\t\t// @ts-expect-error Want to protect value, but also access it with types\n\t\t\tPaths[K]['_routes']\n\t\t>\n\t>\n}\n\n/**\n * @important This config is not used in children paths\n */\ntype PathConfig = {\n\t/**\n\t * Turns the path into a hash path\n\t */\n\thash?: boolean\n\t/**\n\t * Add's \"/modal\" to the being of the path and turns the path into a hash path\n\t * @example /#/modal\n\t */\n\thashModal?: boolean\n\t/**\n\t * Add's \"/modal\" to the being of the path\n\t */\n\tisModal?: boolean\n}\n\nexport class Path<\n\tParams extends Record<string, any>, \n\tUseParams extends Record<string, any>, \n\tRoutes extends Record<string, Path<any, any, any>>\n> {\n\tprotected _params!: Params;\n\tprotected _useParams!: UseParams;\n\tprotected _routes!: Routes;\n\n\tprotected config: PathConfig = {}\n\tprotected paths: Array<ParamPath<keyof Params, Params[keyof Params]> | string> = [];\n\tprivate _includeCurrentURL?: boolean;\n\n\tconstructor(config?: PathConfig) {\n\t\tthis.config = config ?? {};\n\t}\n\n\tprotected clone<\n\t\tParams extends Record<string, any> = Record<string, any>, \n\t\tUseParams extends Record<string, any> = Record<string, any>, \n\t\tRoutes extends Record<string, Path<any, any, any>> = Record<string, Path<any, any, any>>\n\t>() { \n\t\tconst _this = new Path<Params, UseParams, Routes>();\n\n\t\t_this.paths = [...this.paths] as unknown as Array<ParamPath<Params[keyof Params]> | string>;\n\t\t_this._routes = {\n\t\t\t...this._routes\n\t\t} as unknown as Routes;\n\t\t_this._includeCurrentURL = this._includeCurrentURL;\n\t\t_this.config = this.config;\n\n\t\treturn _this;\n\t}\n\n\t/**\n\t * Makes method `get` to return the current path as hash.\n\t * @param includeCurrentURL {boolean}\n\t */\n\tpublic includeCurrentURL(includeCurrentURL?: boolean) {\n\t\tconst _this = this.clone<Params, UseParams, Routes>();\n\t\t_this._includeCurrentURL = includeCurrentURL;\n\t\treturn _this;\n\t}\n\n\t/**\n\t * Add's new value to the path. (Add's the value into the path in the calling other).\n\t * @param path {string} - new path part\n\t */\n\tpublic addPath(path?: string) {\n\t\tconst _this = this.clone<Params, UseParams, Routes>();\n\t\tif ( path ) {\n\t\t\t_this.paths.push(path);\n\t\t}\n\t\treturn _this;\n\t}\n\n\t/**\n\t * Add's param to the path. (Add's the param into the path in the calling other).\n\t * @param value {string} - param name\n\t */\n\tpublic param<\n\t\tK extends string = string, \n\t\tParamsValue extends Params[K] | string | undefined = string\n\t>(\n\t\tvalue: K\n\t): Path<\n\t\tCleanObjects<Params, { [key in K]: ParamsValue }>, \n\t\tCleanObjects<UseParams, { [key in K]: ParamsValue }>, \n\t\tInjectParamsIntoPath<\n\t\t\tCleanObjects<Params, { [key in K]: ParamsValue }>, \n\t\t\tCleanObjects<UseParams, { [key in K]: ParamsValue }>, \n\t\t\tRoutes\n\t\t>\n\t>\n\t/**\n\t * Add's param to the path. (Add's the param into the path in the calling other).\n\t * @param value {string} - param name\n\t * @param config {ParamsConfigOptional<ParamsValue>} - param configuration.\n\t */\n\tpublic param<\n\t\tK extends string = string, \n\t\tParamsValue extends Params[K] | string | undefined = string,\n\t\tUseParamsValue = ParamsValue\n\t>(\n\t\tvalue: K, \n\t\tconfig: ParamsConfigOptional<UseParamsValue, ParamsValue> \n\t): Path<\n\t\tCleanObjects<Params, { [key in K]?: ParamsValue }>, \n\t\tCleanObjects<UseParams, { [key in K]?: UseParamsValue }>, \n\t\tInjectParamsIntoPath<\n\t\t\tCleanObjects<Params, { [key in K]?: ParamsValue }>, \n\t\t\tCleanObjects<UseParams, { [key in K]?: UseParamsValue }>, \n\t\t\tRoutes\n\t\t>\n\t>;\n\t/**\n\t * Add's param to the path. (Add's the param into the path in the calling other).\n\t * @param value {string} - param name\n\t * @param config {ParamsConfig<ParamsValue>} - param configuration.\n\t */\n\tpublic param<\n\t\tK extends string = string,\n\t\tParamsValue extends Params[K] | string | undefined = string,\n\t\tUseParamsValue = ParamsValue\n\t>(\n\t\tvalue: K, \n\t\tconfig: ParamsConfig<UseParamsValue, ParamsValue> \n\t): Path<\n\t\tCleanObjects<Params, { [key in K]: ParamsValue }>, \n\t\tCleanObjects<UseParams, { [key in K]: UseParamsValue }>, \n\t\tInjectParamsIntoPath<\n\t\t\tCleanObjects<Params, { [key in K]: ParamsValue }>, \n\t\t\tCleanObjects<UseParams, { [key in K]: UseParamsValue }>, \n\t\t\tRoutes\n\t\t>\n\t>;\n\t/**\n\t * Add's param to the path. (Add's the param into the path in the calling other).\n\t * @param value {ParamPath} - Param\n\t */\n\tpublic param<\n\t\tK extends string = string,\n\t\tParamsValue extends Params[K] | string | undefined = string,\n\t\tUseParamsValue = ParamsValue,\n\t\tIsOptional = false\n\t>(\n\t\tvalue: ParamPath<K, ParamsValue, UseParamsValue, IsOptional>\n\t): Path<\n\t\tCleanObjects<Params, (IsOptional extends false ? { [key in K]?: ParamsValue } : { [key in K]: ParamsValue })>, \n\t\tCleanObjects<UseParams, (IsOptional extends false ? { [key in K]?: UseParamsValue } : { [key in K]: UseParamsValue })>, \n\t\tInjectParamsIntoPath<\n\t\t\tCleanObjects<Params, (IsOptional extends false ? { [key in K]?: ParamsValue } : { [key in K]: ParamsValue })>, \n\t\t\tCleanObjects<UseParams, (IsOptional extends false ? { [key in K]?: UseParamsValue } : { [key in K]: UseParamsValue })>, \n\t\t\tRoutes\n\t\t>\n\t>;\n\n\t/**\n\t * Add's param to the path. (Add's the param into the path in the calling other).\n\t * @param value {string} - param name\n\t * @param config {ParamsConfig<ParamsValue>} - param configuration.\n\t */\n\tpublic param<\n\t\tK extends string = string,\n\t\tParamsValue extends Params[K] | string | undefined = string,\n\t\tUseParamsValue = ParamsValue\n\t>(\n\t\tvalue: K | ParamPath<K, ParamsValue>, \n\t\tconfig?: ParamsConfig<UseParamsValue, ParamsValue> \n\t): Path<\n\t\tCleanObjects<Params, { [key in K]: ParamsValue }>, \n\t\tCleanObjects<UseParams, { [key in K]: UseParamsValue }>, \n\t\tInjectParamsIntoPath<\n\t\t\tCleanObjects<Params, { [key in K]: ParamsValue }>, \n\t\t\tCleanObjects<UseParams, { [key in K]: UseParamsValue }>, \n\t\t\tRoutes\n\t\t>\n\t> {\n\t\tconst _this = this.clone<(string extends keyof Params ? {} : Params) & { [key in K]: ParamsValue }, Routes>();\n\n\t\tif ( value instanceof ParamPath ) {\n\t\t\t_this.paths.push(\n\t\t\t\tvalue as any\n\t\t\t);\n\t\t\treturn _this as any;\n\t\t}\n\n\t\t_this.paths.push(\n\t\t\tParam<K, UseParamsValue, any>(\n\t\t\t\tvalue,\n\t\t\t\tconfig as any\n\t\t\t) as any\n\t\t);\n\n\t\treturn _this as any;\n\t}\n\n\t/**\n\t * Children path's of current path.\n\t * \n\t * @param routes {Record<string, Path<any, any>>} - object containing the current path children path's\n\t */\n\tpublic routes<S extends Record<string, Path<any, any, any>>>(\n\t\troutes: S\n\t): Path<Params, UseParams, S> {\n\t\tconst _this = this.clone<Params, UseParams, S>();\n\n\t\tif ( __DEV__ ) {\n\t\t\tinvariant(\n\t\t\t\tObject.entries(routes).find(([key, value]) => {\n\t\t\t\t\treturn !(value.config.hash || value.config.hashModal)\n\t\t\t\t}),\n\t\t\t\t'Path\\'s inside \\'.routes({ ... })\\' cannot be hash path\\'s'\n\t\t\t);\n\t\t}\n\n\t\t_this._routes = routes;\n\n\t\treturn _this;\n\t}\n\n\tprotected getBasePath(basePath: string = '') {\n\t\tlet newBasePath = basePath;\n\n\t\tif ( this.config.hash || this.config.hashModal ) {\n\t\t\tnewBasePath = '#';\n\t\t}\n\n\t\tif ( this.config.isModal || this.config.hashModal ) {\n\t\t\tnewBasePath += '/modal';\n\t\t}\n\n\t\treturn newBasePath;\n\t}\n\n\tprotected createPath(\n\t\tbasePath?: string, \n\t\ttransforms?: Array<(params: StringifyObjectParams<Exclude<Params, undefined>>) => void>, \n\t\tbeforePaths?: Array<(params: Exclude<Params, undefined>) => void>\n\t): PathType<Routes, Params, UseParams> {\n\t\t// Groups new transformations with transformations from parents\n\t\tconst _transforms: Array<(params: StringifyObjectParams<Exclude<Params, undefined>>) => void> = transforms ? [...transforms] : [];\n\t\t// Groups new transformations with transformations from parents\n\t\tconst _beforePaths: Array<(params: Exclude<Params, undefined>) => void> = beforePaths ? [...beforePaths] : [];\n\n\t\t// Creates path for current route\n\t\tconst path = `${this.getBasePath(basePath)}/${this.paths\n\t\t.map((path) => {\n\t\t\tif ( typeof path === 'string' ) {\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\tif ( path.config?.transform ) {\n\t\t\t\t_transforms.push((params: StringifyObjectParams<Exclude<Params, undefined>>) => {\n\t\t\t\t\t(params as any)[path.key] = path.config!.transform!(params[path.key]);\n\t\t\t\t})\n\t\t\t}\n\t\t\tif ( path.config?.beforePath ) {\n\t\t\t\t_beforePaths.push((params: Exclude<Params, undefined>) => {\n\t\t\t\t\t(params as any)[path.key] = path.config!.beforePath!(params[path.key]);\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn path.param;\n\t\t})\n\t\t.join('/')}`\n\n\t\t// Generates routes\n\t\tconst paths = Object.entries(this._routes ?? {})\n\t\t.reduce((obj, [key, value]) => {\n\t\t\tobj[key] = value.createPath(path === '/' ? '' : path, _transforms, _beforePaths);\n\t\t\treturn obj;\n\t\t\t// Too hard to put a working type that doesn't create a problem in return\n\t\t}, {} as any) \n\n\t\treturn {\n\t\t\tpath,\n\t\t\tget: (params: Params) => {\n\t\t\t\tconst _params: Exclude<Params, undefined> = (params ? {\n\t\t\t\t\t...params \n\t\t\t\t} : {}) as Exclude<Params, undefined>;\n\n\t\t\t\t_beforePaths.forEach((beforePaths) => {\n\t\t\t\t\tbeforePaths(_params);\n\t\t\t\t})\n\n\t\t\t\tlet newPath = generatePath(\n\t\t\t\t\tpath, \n\t\t\t\t\t_params\n\t\t\t\t)\n\n\t\t\t\tif ( this._includeCurrentURL ) {\n\t\t\t\t\tnewPath = createPathWithCurrentLocationHasHash(newPath);\n\t\t\t\t} \n\n\t\t\t\treturn newPath;\n\t\t\t},\n\t\t\tuseParams: () => {\n\t\t\t\treturn useParams<StringifyObjectParams<Exclude<Params, undefined>>>((params) => {\n\t\t\t\t\t_transforms.forEach((transform) => {\n\t\t\t\t\t\ttransform(params);\n\t\t\t\t\t})\n\n\t\t\t\t\treturn params;\n\t\t\t\t})\n\t\t\t},\n\t\t\t...paths\n\t\t}\n\t}\n}\n\n/**\n * Creates a new path\n * @param path {string} - path base/start\n */\nexport const path = <\n\tParams extends Record<string, any>,\n\tUseParams extends Record<string, any>,\n\tPaths extends Record<string, Path<Params, UseParams, any>> = Record<string, Path<Params, UseParams, any>>\n>(path?: string, config?: PathConfig): Path<Params, UseParams, Paths> => {\n\treturn new Path(config).addPath(path) as Path<Params, UseParams, Paths>;\n}\n","import { type PathType, type Path } from './Path';\n\ntype PathStructures = Record<string, Path<any, any, any>>\n\nexport type SetupPathsResult<R extends PathStructures> = { \n\t// @ts-expect-error Want to protect value, but also access it with types\n\t[K in keyof R]: PathType<R[K]['_routes'], R[K]['_params'], R[K]['_useParams']> \n}\n\n/**\n * Creates the path's structure.\n * @param paths {R} - object with path's structure.\n */\nexport const SetupPaths = <R extends PathStructures>(paths: R): SetupPathsResult<R> => {\n\treturn Object.entries(paths)\n\t.reduce((obj, [key, value]) => {\n\t\t// @ts-expect-error I want createPath as private for use\n\t\t(obj as any)[key] = value.createPath();\n\t\treturn obj;\n\t}, {}) as SetupPathsResult<R>\n}\n"],"names":["RouterContext","createContext","useRouter","context","useContext","invariant","RouteContext","useRoute","cacheCompile","Map","cacheLimit","getUrlPattern","path","baseURL","hash","hashPath","exact","_exact","has","String","get","pathname","_hash","generator","URLPattern","hostname","port","protocol","search","size","set","matchPath","href","matchProps","pattern","match","exec","matchUrl","groups","input","replace","url","URL","window","location","origin","params","Object","entries","reduce","obj","key","value","unique","substring","indexOf","length","lastIndexOf","urlPattern","matchRoute","parentRoute","paths","Array","isArray","i","p","_path","undefined","useMatchRoute","matchResult","ref","useRef","_matchResult","current","validateRouteProps","find","startsWith","every","filter","join","Route","children","component","computedMatch","_jsx","_Fragment","cloneElement","props","BrowserRouter","base","routeProps","action","useUrl","generatePath","originalKey","includes","resolveLocation","_baseURL","m","RangeError","charAt","slice","output","pop","push","normalizeUrl","to","routeUrl","newUrl","newParams","newPath","forEach","useNormalizeUrl","useNavigate","generateUrl","options","history","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","useLink","aProps","navigate","onClick","ex","preventDefault","defaultPrevented","button","target","Link","forwardRef","className","matchClassName","_class","cn","_className","displayName","Navigate","navigateOptions","useEffect","PromptNextContext","usePromptNext","useBeforeURLChange","beforeURLChange","beforeURLChangeRef","_beforeURLChange","addEventListener","removeEventListener","useBlocker","blocker","isBlocking","continueNavigation","setBlocker","useState","finishBlocking","next","usePrompt","when","message","_blocker","_message","confirm","Prompt","promptProps","promptResult","Redirect","from","matchSearchRoute","_search","hashUrl","searchParams","useSearchRoute","matchSearchProps","SearchRoute","isNavigateOrRedirect","isSearchRoute","isRoute","getMatchFromProps","searchBaseProps","useSwitch","childArray","Children","toArray","child","Switch","useAction","useParams","transformsParams","route","useSearchParams","defaultParams","_searchParams","useMemo","parseSearchParams","setParams","newSearch","parseParams","newURL","createNewUrlWithSearch","ParamPath","param","Param","config","instance","optional","createPathWithCurrentLocationHasHash","windowURL","Path","constructor","clone","_this","_routes","_includeCurrentURL","includeCurrentURL","addPath","routes","hashModal","getBasePath","basePath","newBasePath","isModal","createPath","transforms","beforePaths","_transforms","_beforePaths","map","transform","beforePath","_params","SetupPaths"],"mappings":"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"}